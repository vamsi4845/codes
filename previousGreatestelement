package arrays;
import java.util.*;
public class PreviousGreatestElement {
	public static void greatest(int[] arr,int size)
	{
// Normal approach
//		for(int i=0;i<size;i++)
//		{
//			boolean flag=false;
//			for(int j=i-1;j>=0;j--)
//			{
//				if(arr[j]>arr[i]) 
//					{
//						System.out.print(arr[j]+" ");
//						flag=true;
//						break;
//					}
//			}
//			if(!flag)
//			{
//				System.out.print(" - ");
//			}
//			
//		}
// Optimized approach
		Stack<Integer> s = new Stack<>() ;
        s.add(arr[0]);
        System.out.print("- ");
        for (int i = 1 ; i < size; i++) {
            while (s.isEmpty() == false && s.peek() <= arr[i])
            {
                s.pop();
            }
            if (s.empty())
                System.out.print("- ");
            else
                System.out.print(s.peek() + " ");

            s.push(arr[i]);
        }
	}
	public static void main(String[] args) 
	{
		int[] arr= {30,50,20,15,25};
		int size=arr.length;
		greatest(arr,size);
	}

}
